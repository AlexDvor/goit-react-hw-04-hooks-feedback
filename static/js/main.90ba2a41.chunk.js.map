{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.styled.jsx","components/FeedbackOptions/FeedbackOptions.js","components/Notification/Notification.styled.jsx","components/Notification/Notification.js","components/Statistics/Statistics.styled.jsx","components/Statistics/Statistics.js","components/Container/Container.styled.jsx","components/Container/Container.js","components/Section/Section.styled.jsx","components/Section/Section.js","App.js","index.js"],"names":["Buttons","styled","button","FeedbackOptions","options","onchangeState","map","item","onClick","NotificationMessage","p","Notification","message","FeedBackItem","Statistics","good","neutral","bad","total","positivePercentage","Box","div","Container","children","SectionItem","section","Title","h2","Section","text","App","useState","setGood","setNeutral","setBad","totalFeedback","positiveFeedbackPercentage","Number","toFixed","value","prevState","ReactDOM","render","StrictMode","document","getElementById","querySelector"],"mappings":"gPAGaA,EAAUC,IAAOC,OAAV,4J,OCkBLC,I,EAAAA,EAjBf,YAAoD,IAA1BC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,cAC/B,OACI,mCACKD,EAAQE,KAAI,SAAAC,GACT,OACI,cAACP,EAAD,CAASQ,QAAS,kBAAIH,EAAcE,IAApC,SAAuDA,GAAPA,SCPvDE,EAAsBR,IAAOS,EAAV,8BCejBC,I,EAAAA,EAdf,YAAoC,IAAZC,EAAW,EAAXA,QACpB,OACI,mCACI,cAACH,EAAD,UAAsBG,OCJrBC,EAAeZ,IAAOS,EAAV,4BC6BVI,I,EAAAA,EAzBf,YAAoE,IAA9CC,EAA6C,EAA7CA,KAAKC,EAAwC,EAAxCA,QAAQC,EAAgC,EAAhCA,IAAIC,EAA4B,EAA5BA,MAAMC,EAAsB,EAAtBA,mBACzC,OACI,mCACKD,EAAQ,EAAI,qCACb,eAACL,EAAD,oBAAqBE,KACrB,eAACF,EAAD,uBAAwBG,KACxB,eAACH,EAAD,mBAAoBI,KACpB,eAACJ,EAAD,qBAAsBK,KACtB,eAACL,EAAD,iCAAkCM,EAAlC,UACM,cAAC,EAAD,CAAcP,QAAQ,yBCb3BQ,EAAMnB,IAAOoB,IAAV,2ICKDC,I,IAAAA,EAJf,YAAkC,IAAbC,EAAY,EAAZA,SACnB,OAAO,cAACH,EAAD,UAAMG,KCFFC,EAAcvB,IAAOwB,QAAV,4BAGXC,EAAQzB,IAAO0B,GAAV,0BCYHC,MAbf,YAAsC,IAAnBC,EAAkB,EAAlBA,KAAMN,EAAY,EAAZA,SACrB,OACI,eAACC,EAAD,WACI,cAACE,EAAD,UAAQG,IACPN,MCFE,SAASO,IACtB,IA2BwCZ,EA3BxC,EAAwBa,mBAAS,GAAjC,mBAAOhB,EAAP,KAAaiB,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOf,EAAP,KAAgBiB,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOd,EAAP,KAAYiB,EAAZ,KAiCMC,EAXGpB,EAAOC,EAAUC,EAYpBmB,EARU,KADwBlB,EAS2BiB,GAPxD,EAGFE,QADatB,EAAOG,EAAS,KACXoB,WAM3B,OACE,eAAC,EAAD,WACE,cAAC,EAAD,CAAST,KAAK,wBAAd,SACE,cAAC,EAAD,CACEzB,QAAS,CAAC,OAAQ,UAAW,OAC7BC,cAvCY,SAAAkC,GAClB,OAAQA,GACN,IAAK,OACHP,GAAQ,SAAAQ,GAAS,OAAIA,EAAY,KACjC,MAEF,IAAK,UACHP,GAAW,SAAAO,GAAS,OAAIA,EAAY,KACpC,MAEF,IAAK,MACHN,GAAO,SAAAM,GAAS,OAAIA,EAAY,KAChC,MAEF,QACE,aA4BF,cAAC,EAAD,CAASX,KAAK,aAAd,SACE,cAAC,EAAD,CACEd,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOiB,EACPhB,mBAAoBiB,S,MCvD9BK,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACb,EAAD,MAEFc,SAASC,eAAe,SAG1BJ,IAASC,OAAO,cAACZ,EAAD,IAASc,SAASE,cAAc,Y","file":"static/js/main.90ba2a41.chunk.js","sourcesContent":["import styled from '@emotion/styled'\r\n\r\n\r\nexport const Buttons = styled.button`\r\npadding:5px 10px;\r\nmargin-right: 20px;\r\nborder-radius:5px;\r\nborder:none;\r\n\r\n\r\n&:hover,\r\n&:focus {\r\n  background-color: tomato;\r\n`","\r\nimport {Buttons} from './FeedbackOptions.styled'\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction FeedbackOptions({options, onchangeState}) {\r\n    return (\r\n        <>\r\n            {options.map(item => {\r\n                return (\r\n                    <Buttons onClick={()=>onchangeState(item)} key={item}>{item}</Buttons>\r\n                )\r\n            })}\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nFeedbackOptions.propTypes = {\r\nonchangeState:PropTypes.func,\r\n}\r\n\r\nexport default FeedbackOptions;","import styled from \"@emotion/styled\";\r\n\r\nexport const NotificationMessage = styled.p`\r\n\r\n`","import PropTypes from 'prop-types';\r\nimport { NotificationMessage } from './Notification.styled.jsx'\r\n\r\nfunction Notification({ message }) {\r\n    return (\r\n        <>\r\n            <NotificationMessage>{message}</NotificationMessage>\r\n        </>\r\n        \r\n    )\r\n}\r\n\r\n\r\nNotification.propTypes = {\r\n    message:PropTypes.string,\r\n}\r\n\r\nexport default Notification;","import styled from \"@emotion/styled\";\r\n\r\nexport const FeedBackItem = styled.p`\r\n`","\r\n// import style from './FeedBackStat.module.css'\r\nimport Notification from \"../Notification\";\r\nimport PropTypes from 'prop-types';\r\nimport { FeedBackItem } from './Statistics.styled'\r\n\r\nfunction Statistics({ good,neutral,bad,total,positivePercentage }) {\r\n    return (\r\n        <>\r\n            {total > 0 ? <>\r\n            <FeedBackItem>good: {good}</FeedBackItem>\r\n            <FeedBackItem>neutral: {neutral}</FeedBackItem>\r\n            <FeedBackItem>bad: {bad}</FeedBackItem>\r\n            <FeedBackItem>total: {total}</FeedBackItem>\r\n            <FeedBackItem>positive feedback: {positivePercentage}%</FeedBackItem>\r\n            </> : <Notification message=\"No feedback given\"></Notification>}\r\n        </>\r\n    )\r\n}\r\n\r\nStatistics.propTypes = {\r\n    good:PropTypes.number,\r\n    number:PropTypes.number,\r\n    bad: PropTypes.number,\r\n    total:PropTypes.number,\r\n    positivePercentage :PropTypes.number,\r\n}\r\n\r\n\r\n\r\n\r\nexport default Statistics;","import styled from '@emotion/styled'\r\n\r\nexport const Box = styled.div`\r\n  max-width: 1080px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  padding: 15px 20px;\r\n  margin-top: 25px;\r\n`","import {Box} from './Container.styled'\r\n\r\n\r\nfunction Container({ children }) {\r\n  return <Box>{children}</Box>;\r\n}\r\n\r\nexport default Container;","import styled from \"@emotion/styled\";\r\n\r\nexport const SectionItem = styled.section`\r\n`\r\n\r\nexport const Title = styled.h2``","\r\nimport PropTypes from 'prop-types';\r\nimport {SectionItem ,Title} from './Section.styled'\r\n\r\nfunction Section({ text, children }) {\r\n    return (\r\n        <SectionItem >\r\n            <Title>{text}</Title>\r\n            {children}\r\n        </SectionItem >\r\n)\r\n}\r\n\r\nSection.propTypes = {\r\n    text:PropTypes.string,\r\n}\r\n\r\nexport default Section;","import { useState } from 'react';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Statistics from './components/Statistics';\nimport Container from './components/Container/Container';\nimport Section from './components/Section';\n\nexport default function App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const changeState = value => {\n    switch (value) {\n      case 'good':\n        setGood(prevState => prevState + 1);\n        break;\n\n      case 'neutral':\n        setNeutral(prevState => prevState + 1);\n        break;\n\n      case 'bad':\n        setBad(prevState => prevState + 1);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const countTotalFeedback = () => {\n    return good + neutral + bad;\n  };\n\n  const countPositiveFeedbackPercentage = total => {\n    if (total === 0) {\n      return 0;\n    }\n    const percentage = (good / total) * 100;\n    return Number(percentage.toFixed());\n  };\n\n  const totalFeedback = countTotalFeedback();\n  const positiveFeedbackPercentage = countPositiveFeedbackPercentage(totalFeedback);\n\n  return (\n    <Container>\n      <Section text=\"please leave feedback\">\n        <FeedbackOptions\n          options={['good', 'neutral', 'bad']}\n          onchangeState={changeState}\n        ></FeedbackOptions>\n      </Section>\n\n      <Section text=\"statistics\">\n        <Statistics\n          good={good}\n          neutral={neutral}\n          bad={bad}\n          total={totalFeedback}\n          positivePercentage={positiveFeedbackPercentage}\n        ></Statistics>\n      </Section>\n    </Container>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\nReactDOM.render(<App />, document.querySelector('#root'));"],"sourceRoot":""}