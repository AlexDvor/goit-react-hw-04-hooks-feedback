{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.styled.jsx","components/FeedbackOptions/FeedbackOptions.js","components/Notification/Notification.styled.jsx","components/Notification/Notification.js","components/Statistics/Statistics.styled.jsx","components/Statistics/Statistics.js","components/Container/Container.styled.jsx","components/Container/Container.js","components/Section/Section.styled.jsx","components/Section/Section.js","App.js","index.js"],"names":["Buttons","styled","button","FeedbackOptions","options","onchangeState","map","item","onClick","NotificationMessage","p","Notification","message","FeedBackItem","Statistics","good","neutral","bad","total","positivePercentage","Box","div","Container","children","SectionItem","section","Title","h2","Section","text","App","state","changeState","value","setState","prevState","countTotalFeedback","Object","values","reduce","countPositiveFeedbackPercentage","Number","toFixed","totalFeedback","this","positiveFeedbackPercentage","Component","ReactDOM","render","StrictMode","document","getElementById","querySelector"],"mappings":"8QAGaA,EAAUC,IAAOC,OAAV,4J,OCkBLC,I,EAAAA,EAjBf,YAAoD,IAA1BC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,cAC/B,OACI,mCACKD,EAAQE,KAAI,SAAAC,GACT,OACI,cAACP,EAAD,CAASQ,QAAS,kBAAIH,EAAcE,IAApC,SAAuDA,GAAPA,SCPvDE,EAAsBR,IAAOS,EAAV,8BCejBC,I,EAAAA,EAdf,YAAoC,IAAZC,EAAW,EAAXA,QACpB,OACI,mCACI,cAACH,EAAD,UAAsBG,OCJrBC,EAAeZ,IAAOS,EAAV,4BC6BVI,I,EAAAA,EAzBf,YAAoE,IAA9CC,EAA6C,EAA7CA,KAAKC,EAAwC,EAAxCA,QAAQC,EAAgC,EAAhCA,IAAIC,EAA4B,EAA5BA,MAAMC,EAAsB,EAAtBA,mBACzC,OACI,mCACKD,EAAQ,EAAI,qCACb,eAACL,EAAD,oBAAqBE,KACrB,eAACF,EAAD,uBAAwBG,KACxB,eAACH,EAAD,mBAAoBI,KACpB,eAACJ,EAAD,qBAAsBK,KACtB,eAACL,EAAD,iCAAkCM,EAAlC,UACM,cAAC,EAAD,CAAcP,QAAQ,yBCb3BQ,EAAMnB,IAAOoB,IAAV,2ICKDC,I,IAAAA,EAJf,YAAkC,IAAbC,EAAY,EAAZA,SACnB,OAAO,cAACH,EAAD,UAAMG,KCFFC,EAAcvB,IAAOwB,QAAV,4BAGXC,EAAQzB,IAAO0B,GAAV,0BCYHC,MAbf,YAAsC,IAAnBC,EAAkB,EAAlBA,KAAMN,EAAY,EAAZA,SACrB,OACI,eAACC,EAAD,WACI,cAACE,EAAD,UAAQG,IACPN,MCFPO,E,4MACJC,MAAQ,CACNhB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPe,YAAc,SAAAC,GACZ,EAAKC,UAAS,SAAAC,GACZ,OAAO,eACJF,EAAQE,EAAUF,GAAS,O,EAKlCG,mBAAqB,WAMnB,OALsBC,OAAOC,OAAO,EAAKP,OACRQ,QAAO,SAACrB,EAAOe,GAC9C,OAAOf,EAAQe,IACd,I,EAKLO,gCAAkC,SAAAtB,GAChC,GAAc,IAAVA,EACF,OAAO,EAGT,IAAQH,EAAS,EAAKgB,MAAdhB,KAER,OAAO0B,QADa1B,EAAOG,EAAS,KACXwB,Y,4CAG3B,WACE,IAAMC,EAAgBC,KAAKR,qBACrBS,EAA6BD,KAAKJ,gCAAgCG,GACxE,EAA+BC,KAAKb,MAA5BhB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IAEvB,OACE,eAAC,EAAD,WACE,cAAC,EAAD,CAASY,KAAK,wBAAd,SACE,cAAC,EAAD,CACEzB,QAAS,CAAC,OAAQ,UAAW,OAC7BC,cAAeuC,KAAKZ,gBAIxB,cAAC,EAAD,CAASH,KAAK,aAAd,SACE,cAAC,EAAD,CACEd,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOyB,EACPxB,mBAAoB0B,a,GAtDdC,aA8DHhB,I,MC/DfiB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1BJ,IAASC,OAAO,cAAC,EAAD,IAASE,SAASE,cAAc,Y","file":"static/js/main.b6829b3e.chunk.js","sourcesContent":["import styled from '@emotion/styled'\r\n\r\n\r\nexport const Buttons = styled.button`\r\npadding:5px 10px;\r\nmargin-right: 20px;\r\nborder-radius:5px;\r\nborder:none;\r\n\r\n\r\n&:hover,\r\n&:focus {\r\n  background-color: tomato;\r\n`","\r\nimport {Buttons} from './FeedbackOptions.styled'\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction FeedbackOptions({options, onchangeState}) {\r\n    return (\r\n        <>\r\n            {options.map(item => {\r\n                return (\r\n                    <Buttons onClick={()=>onchangeState(item)} key={item}>{item}</Buttons>\r\n                )\r\n            })}\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nFeedbackOptions.propTypes = {\r\nonchangeState:PropTypes.func,\r\n}\r\n\r\nexport default FeedbackOptions;","import styled from \"@emotion/styled\";\r\n\r\nexport const NotificationMessage = styled.p`\r\n\r\n`","import PropTypes from 'prop-types';\r\nimport { NotificationMessage } from './Notification.styled.jsx'\r\n\r\nfunction Notification({ message }) {\r\n    return (\r\n        <>\r\n            <NotificationMessage>{message}</NotificationMessage>\r\n        </>\r\n        \r\n    )\r\n}\r\n\r\n\r\nNotification.propTypes = {\r\n    message:PropTypes.string,\r\n}\r\n\r\nexport default Notification;","import styled from \"@emotion/styled\";\r\n\r\nexport const FeedBackItem = styled.p`\r\n`","\r\n// import style from './FeedBackStat.module.css'\r\nimport Notification from \"../Notification\";\r\nimport PropTypes from 'prop-types';\r\nimport { FeedBackItem } from './Statistics.styled'\r\n\r\nfunction Statistics({ good,neutral,bad,total,positivePercentage }) {\r\n    return (\r\n        <>\r\n            {total > 0 ? <>\r\n            <FeedBackItem>good: {good}</FeedBackItem>\r\n            <FeedBackItem>neutral: {neutral}</FeedBackItem>\r\n            <FeedBackItem>bad: {bad}</FeedBackItem>\r\n            <FeedBackItem>total: {total}</FeedBackItem>\r\n            <FeedBackItem>positive feedback: {positivePercentage}%</FeedBackItem>\r\n            </> : <Notification message=\"No feedback given\"></Notification>}\r\n        </>\r\n    )\r\n}\r\n\r\nStatistics.propTypes = {\r\n    good:PropTypes.number,\r\n    number:PropTypes.number,\r\n    bad: PropTypes.number,\r\n    total:PropTypes.number,\r\n    positivePercentage :PropTypes.number,\r\n}\r\n\r\n\r\n\r\n\r\nexport default Statistics;","import styled from '@emotion/styled'\r\n\r\nexport const Box = styled.div`\r\n  max-width: 1080px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  padding: 15px 20px;\r\n  margin-top: 25px;\r\n`","import {Box} from './Container.styled'\r\n\r\n\r\nfunction Container({ children }) {\r\n  return <Box>{children}</Box>;\r\n}\r\n\r\nexport default Container;","import styled from \"@emotion/styled\";\r\n\r\nexport const SectionItem = styled.section`\r\n`\r\n\r\nexport const Title = styled.h2``","\r\nimport PropTypes from 'prop-types';\r\nimport {SectionItem ,Title} from './Section.styled'\r\n\r\nfunction Section({ text, children }) {\r\n    return (\r\n        <SectionItem >\r\n            <Title>{text}</Title>\r\n            {children}\r\n        </SectionItem >\r\n)\r\n}\r\n\r\nSection.propTypes = {\r\n    text:PropTypes.string,\r\n}\r\n\r\nexport default Section;","import React, { Component } from 'react';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Statistics from './components/Statistics';\nimport Container from './components/Container/Container';\nimport Section from './components/Section';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  changeState = value => {\n    this.setState(prevState => {\n      return {\n        [value]: prevState[value] + 1,\n      };\n    });\n  };\n\n  countTotalFeedback = () => {\n    const totalValueObj = Object.values(this.state);\n    const totalValue = totalValueObj.reduce((total, value) => {\n      return total + value;\n    }, 0);\n\n    return totalValue;\n  };\n\n  countPositiveFeedbackPercentage = total => {\n    if (total === 0) {\n      return 0;\n    }\n\n    const { good } = this.state;\n    const percentage = (good / total) * 100;\n    return Number(percentage.toFixed());\n  };\n\n  render() {\n    const totalFeedback = this.countTotalFeedback();\n    const positiveFeedbackPercentage = this.countPositiveFeedbackPercentage(totalFeedback);\n    const { good, neutral, bad } = this.state;\n\n    return (\n      <Container>\n        <Section text=\"please leave feedback\">\n          <FeedbackOptions\n            options={['good', 'neutral', 'bad']}\n            onchangeState={this.changeState}\n          ></FeedbackOptions>\n        </Section>\n\n        <Section text=\"statistics\">\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={totalFeedback}\n            positivePercentage={positiveFeedbackPercentage}\n          ></Statistics>\n        </Section>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\nReactDOM.render(<App />, document.querySelector('#root'));"],"sourceRoot":""}